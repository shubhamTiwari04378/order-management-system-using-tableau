<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Hari Prasad/Downloads/New Orders (1).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2528"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="113"/><column index="2" value="52"/><column index="3" value="71"/><column index="4" value="77"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="137"/><column index="2" value="176"/><column index="3" value="176"/><column index="4" value="225"/><column index="5" value="176"/><column index="6" value="124"/><column index="7" value="261"/><column index="8" value="212"/><column index="9" value="187"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="102"/><column index="2" value="137"/><column index="3" value="126"/><column index="4" value="148"/><column index="5" value="154"/><column index="6" value="148"/><column index="7" value="228"/><column index="8" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="102"/><column index="3" value="194"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="2" value="300"/><column index="3" value="217"/><column index="4" value="156"/><column index="5" value="258"/><column index="6" value="52"/><column index="7" value="71"/><column index="8" value="77"/><column index="9" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="217"/><column index="2" value="215"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Question 1
-- Write a query to Display the product details (product_class_code, product_id, product_desc, 
-- product_price,) as per the following criteria and sort them in descending order of category:
-- a. If the category is 2050, increase the price by 2000
-- b. If the category is 2051, increase the price by 500
-- c. If the category is 2052, increase the price by 600.

--Solution

SELECT PRODUCT_CLASS_CODE AS 'Product Category',
PRODUCT_ID AS 'Product ID',
PRODUCT_DESC AS 'Product Description',
PRODUCT_PRICE AS 'Actual Price',
CASE PRODUCT_CLASS_CODE
     WHEN 2050 THEN PRODUCT_PRICE + 2000 -- Increase Price for Category 2050
     WHEN 2051 THEN PRODUCT_PRICE + 500 -- Increase Price for Category 2051
     WHEN 2052 THEN PRODUCT_PRICE + 600 -- Increase Price for Category 2052
     ELSE PRODUCT_PRICE END AS 'Calculated Price'
 FROM PRODUCT
 ORDER BY PRODUCT_CLASS_CODE DESC; -- Decending order by category(Product Class Code)
 
 -- Question 2
 --Write a query to display (product_class_desc, product_id, product_desc, 
-- product_quantity_avail ) and Show inventory status of products as below as per their available quantity:
--      a. For Electronics and Computer categories, if available quantity is &lt;= 10, show 'Low 
--         stock', 11 &lt;= qty &lt;= 30, show 'In stock', &gt;= 31, show 'Enough stock'
--      b. For Stationery and Clothes categories, if qty &lt;= 20, show 'Low stock', 21 &lt;= qty &lt;=
--         80, show 'In stock', &gt;= 81, show 'Enough stock'
--      c. Rest of the categories, if qty &lt;= 15 – 'Low Stock', 16 &lt;= qty &lt;= 50 – 'In Stock', &gt;= 51 – 'Enough stock'

--         For all categories, if available quantity is 0, show 'Out of stock'.
 
 -- Solution
 
 SELECT PRODUCT_CLASS_CODE As 'Product Category',
 PRODUCT_ID AS 'Product ID',
 PRODUCT_DESC AS 'Product Description',
 PRODUCT_QUANTITY_AVAIL As 'Product Available' ,
CASE
    WHEN (PRODUCT_CLASS_DESC = 'Electronics' or PRODUCT_CLASS_DESC = 'Computer' ) and PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN 'Low stock'
    WHEN (PRODUCT_CLASS_DESC = 'Electronics' or PRODUCT_CLASS_DESC = 'Computer') and (PRODUCT_QUANTITY_AVAIL &gt; 11 AND PRODUCT_QUANTITY_AVAIL &lt;30)  then 'In Stock'
    WHEN (PRODUCT_CLASS_DESC = 'Electronics' or PRODUCT_CLASS_DESC = 'Computer') and PRODUCT_QUANTITY_AVAIL &gt;= 31 then 'Enough Stock'
    WHEN (PRODUCT_CLASS_DESC = 'Stationery' or PRODUCT_CLASS_DESC = 'Clothes') and PRODUCT_QUANTITY_AVAIL &lt;= 20 then 'Low stock'
    WHEN (PRODUCT_CLASS_DESC = 'Stationery' or PRODUCT_CLASS_DESC = 'Clothes') and PRODUCT_QUANTITY_AVAIL &gt;=21 and PRODUCT_QUANTITY_AVAIL &lt;= 80 then 'In Stock'
    WHEN (PRODUCT_CLASS_DESC = 'Stationery' or PRODUCT_CLASS_DESC = 'Clothes') and PRODUCT_QUANTITY_AVAIL &gt;=81 then 'Enough Stock'
    WHEN (PRODUCT_CLASS_DESC != 'Stationery' or PRODUCT_CLASS_DESC != 'Clothes' or PRODUCT_CLASS_DESC != 'Electronics' or PRODUCT_CLASS_DESC != 'Computer') and PRODUCT_QUANTITY_AVAIL &lt;= 15 then 'Low stock'
    WHEN (PRODUCT_CLASS_DESC != 'Stationery' or PRODUCT_CLASS_DESC != 'Clothes' or PRODUCT_CLASS_DESC != 'Electronics' or PRODUCT_CLASS_DESC != 'Computer') and (PRODUCT_QUANTITY_AVAIL &gt;= 16 OR PRODUCT_QUANTITY_AVAIL &lt;= 50) then 'In Stock'
    WHEN (PRODUCT_CLASS_DESC != 'Stationery' or PRODUCT_CLASS_DESC != 'Clothes' or PRODUCT_CLASS_DESC != 'Electronics' or PRODUCT_CLASS_DESC != 'Computer') and PRODUCT_QUANTITY_AVAIL &gt;= 51 then 'Enough Stock'
    WHEN PRODUCT_QUANTITY_AVAIL=0 then 'Out of Stock'
END AS &quot;Inventory Status&quot;
FROM PRODUCT INNER JOIN PRODUCT_CLASS USING (PRODUCT_CLASS_CODE);

-- Question 3
-- Write a query to Show the count of cities in all countries other than USA &amp; MALAYSIA, with more 
-- than 1 city, in the descending order of CITIES.

-- Solution

SELECT COUNTRY, COUNT(CITY) As 'City Count'
FROM ADDRESS
WHERE NOT COUNTRY = 'USA' and NOT COUNTRY= 'Malaysia'
GROUP BY COUNTRY
HAVING count(CITY)&gt;1
ORDER BY COUNT(CITY) DESC;

-- Question 4
-- Write a query to display the customer_id,customer full name ,city,pincode,and order details (order 
-- id,order date, product class desc, product desc, subtotal(product_quantity * product_price)) for 
-- orders shipped to cities whose pin codes do not have any 0s in them. Sort the output on customer 
-- name, order date and subtotal.

-- Solution

SELECT  OC.CUSTOMER_ID, OC.CUSTOMER_FNAME  ||  OC.CUSTOMER_LNAME  as  FULLNAME,  A.CITY,  A.PINCODE, OH.ORDER_ID,OH.ORDER_DATE, PC.PRODUCT_CLASS_DESC, P.PRODUCT_DESC, OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE as SUBTOTAL
FROM ONLINE_CUSTOMER OC   
INNER JOIN ADDRESS A    
ON OC.ADDRESS_ID = A.ADDRESS_ID   
INNER JOIN ORDER_HEADER OH   
ON OC.CUSTOMER_ID = OH.CUSTOMER_ID 
INNER JOIN ORDER_ITEMS OI   
ON OH.ORDER_ID = OI.ORDER_ID   
INNER JOIN PRODUCT P   
ON OI.PRODUCT_ID = P.PRODUCT_ID  
INNER JOIN PRODUCT_CLASS PC   
ON P.PRODUCT_CLASS_CODE= PC.PRODUCT_CLASS_CODE  
WHERE OH.ORDER_STATUS='Shipped' AND A.PINCODE NOT LIKE  &quot;%0%&quot;   
ORDER BY FULLNAME,OH.ORDER_DATE, SUBTOTAL; 





-- Question 5 
-- Write a Query to display product id,product description,totalquantity(sum(product quantity) 
-- for an item which has been bought maximum no. of times along with product id 201.

-- Solution

 SELECT P.PRODUCT_ID, PRODUCT_DESC, SUM(PRODUCT_QUANTITY) AS TOTAL_QUANTITY 
 FROM ORDER_ITEMS OI, PRODUCT P 
 WHERE ORDER_ID IN 
 (SELECT ORDER_ID FROM ORDER_ITEMS  
 WHERE PRODUCT_ID = 201) 
 AND P.PRODUCT_ID != 201 
 AND OI.PRODUCT_ID = P.PRODUCT_ID 
 GROUP BY P.PRODUCT_ID, PRODUCT_DESC 
 ORDER BY TOTAL_QUANTITY DESC LIMIT 1; 

-- Question 6 
--  Write a query to display the customer_id,customer name, email and order details (order id, 
-- product desc,product qty, subtotal(product_quantity * product_price)) for all customers 
-- even if they have not ordered any item.

-- Solution

SELECT OC.CUSTOMER_ID ,OC.CUSTOMER_FNAME,OC.CUSTOMER_LNAME,OC.CUSTOMER_EMAIL,OH.ORDER_ID,PR.PRODUCT_DESC,OI.PRODUCT_QUANTITY,
OI.PRODUCT_QUANTITY * PR.PRODUCT_PRICE subtotal

FROM ONLINE_CUSTOMER OC
LEFT JOIN ORDER_HEADER OH on OC.CUSTOMER_ID = OH.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS OI on OH.ORDER_ID = OI.ORDER_ID
Left JOIN PRODUCT PR on OI.PRODUCT_ID = PR.PRODUCT_ID;

</sql><current_tab id="0"/></tab_sql></sqlb_project>
